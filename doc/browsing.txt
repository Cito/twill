=======================
Web browsing with twill
=======================

twill strives to be a complete implementation of a Web browser,
omitting only JavaScript support.  It includes support for cookies,
basic authentication, and most (all?) HTTP trickery, including
HTTP-EQUIV redirects.  Please `let me know`_ if you find a situation
where it doesn't work!

twill implements a variety of commands_.  With the built-in language,
you can do things like go to a specific URL; follow links; fill out
forms and submit them; save, load, and delete cookies; and change the
agent string.  You can also easily extend twill with new and specialized
Python commands.

.. _let me know: twill@lists.idyll.org
.. _commands: commands.html

Using twill interactively
~~~~~~~~~~~~~~~~~~~~~~~~~

twill-sh lets you interactively browse the Web.  It features built-in
help, e.g. "help go" will describe the command 'go' to you;
command-line completion with TAB; and history browsing (UP/DOWN arrows).

Proxy servers
~~~~~~~~~~~~~

twill understands the ``http_proxy`` environment variable generically
used to set proxy server information.  To use a proxy in UNIX or
Windows, just set the ``http_proxy`` environment variable, e.g. ::

   % export http_proxy="http://www.someproxy.com:3128"

or ::

   % setenv http_proxy="http://www.someotherproxy.com:3148"

Recording scripts
~~~~~~~~~~~~~~~~~

Writing twill scripts is boring.  One simple way to get at least a
rough initial script is to use the maxq_ recorder to generate a twill
script.  maxq_ acts as an HTTP proxy and records all HTTP traffic; I
have written a simple twill script generator for it.  The script
generator and installation docs are included in the twill distribution
under the directory ``maxq/``.

A more recent option is to use the Firefox extension TestGen4Web_, which
will record your Web browsing in a standard format.  Matt Harrison is
working on converter.

.. _converter: http://panela.blog-city.com/generate_twill_scripts_and_mechanize_unittests_from_testgen4.htm
.. _TestGen4Web: http://developer.spikesource.com/wiki/index.php/Projects:TestGen4Web


Miscellaneous implementation details
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 * twill ignores robots.txt.

 * http-equiv=refresh headers are handled immediately, independent of the
   'pause' component of the 'content' attribute.

 * twill does not understand javascript.

.. _maxq: http://maxq.tigris.org/


Using HTML Tidy to check for broken HTML
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The `HTML Tidy`_ tool can be used to check and clean up broken HTML
pages.  You can use it with the 'tidy_ok' command to assert that it
reports no warnings or errors.  In order to use this command in twill,
you need to install the `PyTidyLib`_ package.  If it is not installed,
twill will silently ignore it.  It may be desirable to *require* a
functioning ``PyTidyLib`` installation; so, to fail when it *isn't*
installed, set ``config require_tidy 1``.

.. _HTML Tidy: http://www.html-tidy.org/
.. _PyTidyLib: http://countergram.com/open-source/pytidylib/